[package]
name = "xrfq3"
version = "1.0.0"
edition = "2021"
[lib]
doctest = false

[dependencies]
serde = { version = "1.0.219", features = ["derive"] }
serde-aux = "4.7.0"

secrecy = { version = "0.10.3", features = ["serde"] }

tracing-appender = "0.2.3"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
tracing-bunyan-formatter = "0.3.10"

config = "0.15.15"

anyhow = "1.0.99"

thiserror = "2.0.16"

tracing = "0.1.41"

tokio = { version = "1.47.1", features = ["macros", "rt-multi-thread", "full"] }

uuid = { version = "1.18.0", features = ["v4", "v7", "v8"] }

chrono = { version = "0.4.41", features = ["serde"] }

rust_decimal = { version = "1.37.2", features = ["macros"] }

cassandra-cpp = "3.0.2"

redis = { version = "1.0.0-alpha.1", features = ["tokio-comp", "connection-manager"] }

sha3 = "0.11.0-rc.0"
bytes = "1.10.1"

prost = { version = "0.14.1" }
prost-types = "0.14.1"
tonic-prost = "0.14.1"
tonic = { version = "0.14.1", features = ["tls-native-roots"] }
serde_json = "1.0.143"

[dependencies.sqlx]
version = "0.8.6"
default-features = false
features = [
    "runtime-tokio-rustls", # tells sqlx to use the tokio runtime for its futures and rustls as TLS backend
    "macros", # “gives us access to sqlx::query! and sqlx::query_as!”
    "postgres", # unlocks Postgres-specific functionality (e.g.non-standard SQL types)
    "chrono", # “adds support for mapping SQL timestamptz to the DateTime<T> type from the chrono crate”
    "migrate", # “gives us access to the same functions used under the hood by sqlx-cli to manage migrations”
    "tls-rustls",
    "rust_decimal"
]

[build-dependencies]
tonic-prost-build = "0.14.1"

[dev-dependencies]
testcontainers = "0.24.0"
testcontainers-modules = { version = "0.12.1", features = ["redis"] }
