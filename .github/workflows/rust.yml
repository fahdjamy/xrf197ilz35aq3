name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  # PostgreSQL Env Vars
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: password
  POSTGRES_DB: test_db
  DATABASE_URL: postgresql://runner:password@localhost:5432/test_db

jobs:
  test_service_on_macos:
    runs-on: macos-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check if service started
        run: |
          echo "Workflow started. If PostgreSQL service failed to initialize due to Docker issues, this job would likely fail before this step."
          echo "Attempting to see if PostgreSQL port is accessible..."
          # Give it a moment, though the health check in services should handle readiness
          sleep 15 
          if nc -z localhost 5432; then
            echo "SUCCESS: PostgreSQL is listening on localhost:5432"
          else
            echo "FAILURE: PostgreSQL does not seem to be listening on localhost:5432"
            # Note: Sometimes on macOS services, the host might be 'postgres' if DNS for services is set up.
            # For simplicity, localhost is usually sufficient for port checking after health check passes.
            exit 1
          fi
